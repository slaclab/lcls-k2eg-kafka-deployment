apiVersion: v1
kind: ConfigMap
metadata:
  name: k2eg-config
data:
  k2eg.config: |
    log-level=debug
    storage-path=/data/k2eg-database/k2eg.db
    cmd-input-topic=lcls-k2eg-cmd-topic
    sub-server-address=lcls-cluster-kafka-bootstrap:9092
    sub-group-id=lcls-k2eg
    pub-server-address=lcls-cluster-kafka-bootstrap:9092
    metric-enable=true
    pub-impl-kv=debug:cgrp,topic,fetch
    scheduler-check-delay-seconds=60
    scheduler-thread-number=1
    monitor-worker-cron-schedule=0 */5 * * * *
    nc-monitor-expiration-timeout=3600
    nc-purge-queue-on-exp-timeout=true
    nc-monitor-consumer-filterout-regex=.*strimzi.*"
    nc-monitor-consumer-filterout-regex=.*k2eg.*"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: k2eg-db-volume
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k2eg
spec:
  selector:
    matchLabels:
      app: k2eg
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '8080'
      labels:
        app: k2eg
    spec:
      containers:
      - name: k2eg
        image: ghcr.io/slaclab/k2eg/ubuntu:latest
        imagePullPolicy: Always
        command: [k2eg]
        args: ['--conf-file', 'yes', '--conf-file-name', '/etc/config/k2eg.config']
        envFrom:
        - configMapRef:
            name: epics-env-config
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        - name: k2eg-db-volume
          mountPath: /data/k2eg-database
        resources:
          limits:
            memory: 512Mi
            cpu: 1000m
        ports:
        - containerPort: 8080
      imagePullSecrets:
      - name: gh-secret
      volumes:
      - name: config-volume
        configMap:
          name: k2eg-config
      - name:  k2eg-db-volume
        persistentVolumeClaim:
          claimName: k2eg-db-volume