apiVersion: v1
kind: ConfigMap
metadata:
  name: k2eg-config
data:
  k2eg.config: |
    log-level=debug
    #storage-path=/data/k2eg-database/k2eg.db
    cmd-input-topic=lcls-k2eg-cmd-topic
    #sub-server-address=lcls-cluster-kafka-bootstrap:9092
    sub-server-address=lcls-cluster-kafka-bootstrap:9092
    sub-group-id=lcls-k2eg
    pub-server-address=lcls-cluster-kafka-bootstrap:9092
    metric-enable=true
    #publisher
    #pub-impl-kv=debug:cgrp,topic,fetch
    pub-flush-trimeout-ms=100
    scheduler-check-delay-seconds=60
    scheduler-thread-number=1
    monitor-worker-cron-schedule=* */1 * * * *
    nc-monitor-expiration-timeout=600
    nc-purge-queue-on-exp-timeout=true
    nc-monitor-consumer-filterout-regex=.*strimzi.*
    nc-monitor-consumer-filterout-regex=.*k2eg.*
    # thread number for consume epics data from epics client queue
    epics-monitor-thread-count=16
    #snapshot
    snapshot-repeating-scheduler-thread=4
    # configuration server
    configuration-server-host=consul-server
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k2eg-startup
data:
  startup.sh: |
    #!/bin/sh
    caRepeater &
    exec k2eg --conf-file yes --conf-file-name /etc/config/k2eg.config
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: k2eg
spec:
  serviceName: k2eg
  selector:
    matchLabels:
      app: k2eg
  replicas: 1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '8080'
        k8s.v1.cni.cncf.io/networks: '[
                {
                "name": "sdf-ad-ingest-static",
                "namespace": "multus-system",
                "ips": [ "172.24.8.119/24" ],
                "gateway": [ "172.24.8.1" ]
                }
          ]'
      labels:
        app: k2eg
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: edu.stanford.slac.sdf.k8s.networking.multus
                operator: In
                values:
                - enable
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/ext-load-balancer
      containers:
      - name: k2eg
        image: ghcr.io/slaclab/k2eg/ubuntu:latest
        imagePullPolicy: Always
        command: ["/usr/local/bin/startup.sh"]
        env:
        - name: LD_PRELOAD
          value: /usr/lib/x86_64-linux-gnu/libjemalloc.so.2
        - name: MALLOC_CONF
          value: "background_thread:true,dirty_decay_ms:500,muzzy_decay_ms:500,metadata_thp:auto,narenas:4"
        envFrom:
        - configMapRef:
            name: epics-env-config
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        - name: startup-volume
          mountPath: /usr/local/bin/startup.sh
          subPath: startup.sh
        # - name: k2eg-db-volume
        #   mountPath: /data/k2eg-database
        resources:
          requests:
            memory: 8Gi
            cpu: 16
          limits:
            memory: 8Gi
            cpu: 16
        ports:
        - containerPort: 8080
      imagePullSecrets:
      - name: gh-secret
      volumes:
      - name: config-volume
        configMap:
          name: k2eg-config
      - name: startup-volume
        configMap:
          name: k2eg-startup
          defaultMode: 0755